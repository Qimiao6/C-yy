#define _CRT_SECURE_NO_WARNINGS 1
//#include<stdio.h>
//int ddd(int* a, int* b);
//int main()
//{
//	int i = 0;
//	int y = 0;
//	while (scanf("%d %d", &i, &y) != EOF)
//	{
//		int yy = ddd(i,y);
//		printf("%d\n",yy);
//	}
//	return 0;
//}
//int ddd(int a, int b)
//{
//	int cc = 0;
//	int kk = a ^ b;//异或得出不同位，不同位全变为1
//	while (kk != 0)
//	{
//		cc += kk & 1;//计算不同位的个数
//		kk >>= 1;
//	}
//	return cc;
//}
////                        计算整数中1的数量
//#include<stdio.h>
//int arr(int x);
//
//int main()
//{
//	int i = 0;
//	while (scanf("%d", &i) != EOF)
//	{
//		printf("%d\n", arr(i));
//	}
//	return 0;
//	}
//int arr(int x)
//{
//	int bb = 0;//1的数量
//	while (x != 0)
//	{
//		bb += x & 1;
//		x >>= 1;
//	}
//	return bb;
//}
//                      计算两个整数的二进制不同的位
//#include<stdio.h>
//int arr(int a, int b);
//int main()
//{
//	int i = 0;
//	int y = 0;
//	while (scanf("%d %d", &i, &y) != EOF)
//	{
//		int gg =arr(i , y);
//		printf("%d", gg);
//	}
//	}
//int arr(int a, int b)
//{
//	int h = a ^ b;
//	int cc = 0;//位不同的个数
//	while (h != 0)
//	{
//		cc += h & 1;
//		h >>= 1;
//	}
//	return cc;
//}
//            获取二进制数列中的奇数位和偶数位

//#include<stdio.h>
//int main()
//{
//	int i = 0;
//	scanf("%d", &i);
//	int bit = 8 * sizeof(i)-1;//二进制的位数，减一是为了减掉符号位
//	int pp = bit+1;
//	for (bit; bit > 0; bit--)//奇数
//	{
//		if (bit % 2 == 1)
//		{
//			int yy = bit - 1;//位移减一是如果要想第3位到第一位需移动两个位置
//			//那么就是想移动到n位需移动n-1
//			/*printf("%d ", bit);*/
//			int a = (i >>yy) & 1;
//			printf("%d ", a);
//			/*printf("%d ", yy);*/
//		}
//		
//	}
//	printf("\n");
//	for (pp; pp > 0; pp--)//偶数
//	{
//		if (pp % 2 == 0)
//		{
//			int ii = pp - 1;
//			
//			int k = (i >> ii) & 1;
//			printf("%d ", k);
//		}
//		
//	}
//	printf("\n");
//	return 0;
//}
//                整数转6进制

//#include<stdio.h>
//int main()
//{
//	int i = 120;
//	int a[10] = {0};
//	a[0] = i % 6;
//	printf("%d", a[0]);
//	return 0;
//	}
//#include<stdio.h>
//int main()
//{
//    int i = 0;
//    int arr[50] = { 0 };
//    int a = 0;//循环次数
//    scanf("%d", &i);
//    while (i)
//    {
//        if (i < 6)
//        {
//            arr[a] = i;
//            a++;
//            break;
//        }
//        else
//            arr[a] = i % 6;
//        a++;
//        i /= 6;
//    }
//    for (a--; a >= 0; a--)
//    {
//        printf("%d", arr[a]);
//    }
//    return 0;
//}

//#include<stdio.h>
//int main()
//{
//    int i = 0;
//    scanf("%d", &i);
//    int arr[50] = { 0 };
//    int a = 0;
//    while (a <= 50)
//    {
//        scanf("%d", &arr[a]);
//        a++;
//    }
//    for (int b = 0; b < i; b++)
//    {
//        printf("%d ", arr[b])
//    }
//    return 0;
//}
//    对于每组输入，输出一个正整数，为n和m
//的最大公约数与最小公倍数之和。
//#include<stdio.h>
//int main()
//{
//    int i = 123124;
//    int o = 1253728;
//    long long k = 0;//最大公约数
//   long long dd = 0;//最大公约数
//    //scanf("%d %d", &i, &o);
//    k = i < o ? i : o;
//    dd = i > o ? i : o;
//    while (1)
//    {
//        if (i % k == 0 && o % k == 0)
//            break;
//        k--;
//    }
//    while (1)
//    {
//        if (dd % i == 0 && dd % o == 0)
//            break;
//        dd += dd;
//    }
//    printf("%d", dd + k);
//    return 0;
//}


