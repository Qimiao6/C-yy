#define _CRT_SECURE_NO_WARNINGS 1
//                     用数组指针形式打印数组
//#include<stdio.h>
//int main()
//{
//	int a[] = { 1,2,3,4,5,6 };
//	int b[] = { 2,3,4,5,6,7 };
//	int c[] = { 3,4,5,6,7,8 };
//	int d[] = { 4,5,6,7,8,9 };
//	int* arr[] = { a,b,c,d };
//	int i = 0;
//	for (i = 0; i < 4; i++)
//	{
//		int p = 0;
//		for (p = 0; p < 6; p++)
//		{
//
//			//printf("%d " ,arr[i][p]);
//			printf("%d ", (*(*arr+i)+p ));
//		}
//		printf("\n");
//	}
//	return 0;
//}

//                输入字符和字符串
//
//#include<stdio.h>
//int main()
//{
//	char i = 'd';
//	char k[] = "赢";
//	printf("%c \n%s\n", i, k);
//	return 0;
//}

//          结构体
//
struct ts
{
	char sm[100];
	int jg;
	char zz;
};
//#include<stdio.h>
//int main()
//{
//	struct ts bx={ "变形金刚", 55, 'k' };
//	printf("%s %d %c\n", bx.sm, bx.jg, bx.zz);
//	return 0;
//}

//              结构体

//struct mm
//{
//	int nd;
//	char l[1234];
//	struct ts;
//};
//#include<stdio.h>
//int main()
//{
//	struct mm ll={.nd = 1992,.l="会计恒等式附件是的哈佛和",.jg = 100,.sm = "sakof"};
//	printf("%d , %s, %d , %s", ll.nd, ll.l, ll.jg, ll.sm);
//	return 0;
//}

//                   结构体函数打印

//#include<stdio.h>
//void print(struct kk n);
//struct kk
//{
//	int i[10];
//	char mm[10];
//};
//int main()
//{
//	struct kk d = { {1,2,3,4,5,6,7,8,9,10},"djsfaj" };
//	print(d);
//	return 0;
//}
//void print(struct kk n)
//{
//	int g = 0;
//	for (g = 0;g < 10; g++)
//	{
//		printf("%d ", n.i[g]);//
//	}
//	printf("%s ", n.mm);
//}

//           结构体用指针传址调用

//struct min
//{
//	int i;
//	char ss[];
//};
//#include<stdio.h>
//void prin(struct min* ff);
//int main()
//{
//	struct min kk = { .i = 111,.ss = "kfgekf"};
//	prin(&kk);
//		return 0;
//}
//void prin(struct min* ff)
//{
//	printf("%d %s", ff->i, ff->ss);
//}

//               打印菱形

//#include<stdio.h>
//int main()
//{
//	int i = 0;//行
//	int b = 12;//空格
//	int  c = 1;//初始*
//	while (i < 13)
//	{
//		int a = 0;
//		while (a < b)//空格
//		{
//			printf(" ");
//			a++;
//		}
//		int y = 0;
//		while (y < c)//*号
//		{
//			printf(" ");
//			printf("*");
//			y++;
//		}
//		int v = 0;
//		while (v < b)//空格
//		{
//			printf(" ");
//			v++;
//		}
//		printf("\n");
//		printf("\n");
//		if (i > 5)//下半
//		{
//			c -= 2;
//			b += 2;
//		}
//		else//上半
//		{
//			c += 2;
//			b -= 2;
//		}
//		i++;
//	}
//
//	return 0;
//}

			//求出0～100000之间的所有“水仙花数”并输出。
			//“水仙花数”是指一个n位数，其各位数字的n次方之和确好等于该数本身，
			//如:153＝1 ^ 3＋5 ^ 3＋3 ^ 3，则153是一个“水仙花数”。

//#include<stdio.h>
//int main()
//{
//	int b = 0;
//	while (b <= 100000)
//	{
//		
//		int i[9] = { 0 };
//		int y = 0;
//		int r = 0;
//		int k = b;
//		int o = b;
//			while(o)
//			{
//				int t = o;
//				if (o < 10)
//				{
//					i[y] = o;
//				}
//				else
//				{
//					i[y] = o % 10;
//
//				}
//				r = r + (i[y] * i[y] * i[y] );
//				o /= 10;
//				y++;
//
//			}
//				if (r == k)
//				{
//					printf("%d  ", b);
//		     	}
//			b++;
//	}
//	return 0;
//}
//

/#include < stdio.h >
//struct S
//{
//	int a;
//	int b;
//};
//int main()
//{
//	struct S a, * p = &a;
//	a.a = 99;
//	printf("%d\n", (*p).a);
//	return 0;
//}

struct stu
{
	int num;
	char name[10];
	int age;
};
void fun(struct stu* p)
{
	printf("% s\n" , (*p).name);
	return;
}


int main()
{
	struct stu students[3] = { {9801,"zhang",20},
							  {9802,"wang",19},
							  {9803,"zhao",18}
	};
	fun(students + 1);
	return 0;
}
