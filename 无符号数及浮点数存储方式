#define _CRT_SECURE_NO_WARNINGS 1
//#include<stdio.h>
//int main()
//{
//	char i = 128;//10000000 
//	//原 00000000 00000000 00000000 10000000 
//	//截断放入 i   10000000 补
//	//整形提升11111111 11111111 11111111 10000000 补
//	//        
//	printf("%u", i);
//	return 0;
//}

//                 手动计算
//

//            找凶手
//   A说：不是我  。  B说：是C。    C说：是D 。  D说：C在胡说
//已知3个人说了真话，1个人说的是假话。

//#include<stdio.h>
//int main()
//{
//	int i = 0;
//	int A = 0;
//	int B = 0;
//	int C = 0;
//	int D = 0;
//	for (i = 1; i < 5; i++)
//	{
//		int A = 0;
//		int B = 0;
//		int C = 0;
//		int D = 0;
//		if (i != 1)//A
//		   A = 0;
//		else
//		   A = 1;
//		if (i != 2)//B
//			C = 1;
//		else
//			B = 1;
//		if (i != 3)//C
//			D = 1;
//		else
//			C = 1;
//		if (i != 4)//D
//			D = 0;
//		else
//			D = 1;
//		if (A + B + C + D == 1)
//			break;
//	}
//	if (A == 1)
//		printf("A是凶手");
//	if (B== 1)
//		printf("B是凶手");
//	if (C == 1)
//		printf("C是凶手");
//	if (D == 1)
//		printf("D是凶手");
//	return 0;
//}

//#include<stdio.h>
//int main()
//{
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	int d = 0;
//	int e = 0;
//	for (a = 1; a <= 5; a++)
//	{
//		for (b = 1; b <= 5; b++)
//		{
//			for (c = 1; c <= 5; c++)
//			{
//				for (d = 1; d <= 5; d++)
//				{
//					for (e = 1; e <= 5; e++)
//					{
//						if (((b == 2) + (a == 3) == 1) &&
//							((b == 2) + (e == 4) == 1) &&
//							((c == 1) + (d == 2) == 1) &&
//							((c == 5) + (d == 3) == 1) &&
//							((e == 4) + (a == 1) == 1))
//						{
//							if (a * b * c * d * e == 120)
//								printf("A是第%d  B是第%d  C是第d  D是第%d  E是第%d\n", a, b, c, d, e);
//						}
//
//					}
//				}
//			}
//		}
//	}
//
//	return 0;
//}

//#include<stdio.h>
//int n;
//
//int main() {
//	scanf("%d", &n);
//	int num[50][50];
//	num[1][1] = 1;
//	for (int i = 1; i <= n; i++) {
//		for (int j = 1; j <= i; j++) {
//			if (j == i || j == 1) {
//				num[i][j] = 1;
//				printf("%d ", num[i][j]);
//			}
//			else {
//				num[i][j] = num[i - 1][j - 1] + num[i - 1][j];
//				printf("%d ", num[i][j]);
//			}
//		}
//		printf("\n");
//	}
//	return 0;
//}
//#include<stdio.h>
//int main()
//{
//    char a[1000] = { 0 };
//    int i = 0;
//    for (i = 0; i < 1000; i++)
//    {
//        a[i] = -1 - i;
//    }
//    printf("%d", strlen(a));
//    return 0;
//}

//                  测试
//#include<stdio.h>
//#include<string.h>
//int main()
//{
//	char i[100] = {'w','e','0','d','d'};
//	printf("%d",strlen(i));
//	return 0;
//}
////                无符号
//#include<stdio.h>
//#include<Windows.h>
//int main()
//{
//	unsigned int i = 0;//     无符号比较诡异不熟悉不要用
//	for (i = 9; i >= 0; i--)//应为是无符号，减一成负数符号位也成了二进制位
//	{
//		printf("%d\n", i - 1);
//		Sleep(100);
//	}
//	return 0;
//}
//#include<stdio.h>
//int main()
//{
//    char a[1000] = { 0 };
//    int i = 0;
//    for (i = 0; i < 1000; i++)
//    {
//        a[i] = -1 - i; //-1,-2,-3-255,0
//    }
//    printf("%d", strlen(a));
//    return 0;
//}


//#include<stdio.h>
//int main()
//{
//    char a[1000] = { 1,2,3,0,4 };//0在ASLL表中对于字符\0,会导致strlen提前停止计算
//  /*  int i = 0;
//    for (i = 0; i < 1000; i++)
//    {
//        a[i] = -1 - i; 
//    }*/
//    printf("%d", strlen(a));
//    return 0;
//}

//                  /浮点数测试                  ///////////

//#include<stdio.h>
//int main()
//{
//	float i = 3.3;
//	float s = 3.1;
//	float* p = &i;
//	printf("%lf", i+s);
//	return 0;
//}

//                      浮点数的存储

#include<stdio.h>
int main()
{
	float i = 5.5f;
	// 5.5 = (-1)^0 * 1.011 * 2^2
	// S = 0
	// M = 1.011(最左边1会被系统默认掉)
	// E = 2(加中间值127= 129，转二进制为1000 0001 )
	//存入32位浮点  ： 0 1000 0001 011 000000000000000000
	               //  S ....E....  M  M后面默认补0
	//0100 0000 1011 0000 00000000000000
	//4     0     b   0     00   00   //内存中16进制
	// 调试看内存与我们分析的一样
	return 0;
}
